{"version":3,"sources":["meteor://ðŸ’»app/imports/api/server/collections.js","meteor://ðŸ’»app/imports/api/category.js","meteor://ðŸ’»app/imports/api/userFile.js","meteor://ðŸ’»app/server/main.js"],"names":["Meteor","module","link","v","CategoryCollections","UserInfoCollections","exportDefault","Collections","isServer","find","fetch","length","insert","JSON","parse","Assets","getText","export","Mongo","Collection","publish","default","startup","methods","pref","update","$push"],"mappings":"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","file":"/app.js","sourcesContent":["import {Meteor} from 'meteor/meteor';\r\n\r\nimport {CategoryCollections} from '../category';\r\nimport {UserInfoCollections} from '../userFile';\r\n\r\nexport default Collections = () => {\r\n  if (Meteor.isServer) {\r\n    if (CategoryCollections.find().fetch().length == 0) {\r\n\t\t\tCategoryCollections.insert(JSON.parse(Assets.getText(\"category.json\")));\r\n    }\r\n    if (UserInfoCollections.find().fetch().length == 0) {\r\n\t\t\tUserInfoCollections.insert(JSON.parse(Assets.getText(\"user.json\")));\r\n    }\r\n  }\r\n}","import {Mongo} from 'meteor/mongo';\r\nimport {Meteor} from 'meteor/meteor';\r\n\r\nexport const CategoryCollections = new Mongo.Collection('category');\r\n\r\nif (Meteor.isServer) {\r\n    Meteor.publish('category', () => {\r\n        return CategoryCollections.find();\r\n    });\r\n}","import {Mongo} from 'meteor/mongo';\r\nimport {Meteor} from 'meteor/meteor';\r\n\r\nexport const UserInfoCollections = new Mongo.Collection('userInfo');\r\n\r\nif (Meteor.isServer) {\r\n    Meteor.publish('userInfo', () => {\r\n        return UserInfoCollections.find();\r\n    });\r\n}","import { Meteor } from 'meteor/meteor';\nimport {Mongo} from 'meteor/mongo';\n\nimport Collections from '../imports/api/server/collections';import {UserInfoCollections} from '../imports/api/userFile';\n\nMeteor.startup(() => {\n\n  Collections();\n  \n  Meteor.methods({\n    'insertPreference'(pref) {\n      UserInfoCollections.update(\n        {\"name\": {\n          \"first\": \"Seung Won\",\n          \"last\": \"Lee\"\n          }\n        },\n        {$push: {\"preferences\": pref}}\n      )\n    }\n  })\n});\n"]}
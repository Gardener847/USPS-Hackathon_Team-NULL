[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nECMAScript = Package.ecmascript.ECMAScript;\nReactMeteorData = Package['react-meteor-data'].ReactMeteorData;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nWebAppInternals = Package.webapp.WebAppInternals;\nmain = Package.webapp.main;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nmeteorInstall = Package.modules.meteorInstall;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAccounts = Package['accounts-base'].Accounts;\nAutoupdate = Package.autoupdate.Autoupdate;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"api\":{\"server\":{\"collections.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////\n//                                                                             //\n// imports/api/server/collections.js                                           //\n//                                                                             //\n/////////////////////////////////////////////////////////////////////////////////\n                                                                               //\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet CategoryCollections;\nmodule.link(\"../category\", {\n  CategoryCollections(v) {\n    CategoryCollections = v;\n  }\n\n}, 1);\nlet UserInfoCollections;\nmodule.link(\"../userFile\", {\n  UserInfoCollections(v) {\n    UserInfoCollections = v;\n  }\n\n}, 2);\nmodule.exportDefault(Collections = () => {\n  if (Meteor.isServer) {\n    if (CategoryCollections.find().fetch().length == 0) {\n      CategoryCollections.insert(JSON.parse(Assets.getText(\"category.json\")));\n    }\n\n    if (UserInfoCollections.find().fetch().length == 0) {\n      UserInfoCollections.insert(JSON.parse(Assets.getText(\"user.json\")));\n    }\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////\n\n}},\"category.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////\n//                                                                             //\n// imports/api/category.js                                                     //\n//                                                                             //\n/////////////////////////////////////////////////////////////////////////////////\n                                                                               //\nmodule.export({\n  CategoryCollections: () => CategoryCollections\n});\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nconst CategoryCollections = new Mongo.Collection('category');\n\nif (Meteor.isServer) {\n  Meteor.publish('category', () => {\n    return CategoryCollections.find();\n  });\n}\n/////////////////////////////////////////////////////////////////////////////////\n\n},\"userFile.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////\n//                                                                             //\n// imports/api/userFile.js                                                     //\n//                                                                             //\n/////////////////////////////////////////////////////////////////////////////////\n                                                                               //\nmodule.export({\n  UserInfoCollections: () => UserInfoCollections\n});\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nconst UserInfoCollections = new Mongo.Collection('userInfo');\n\nif (Meteor.isServer) {\n  Meteor.publish('userInfo', () => {\n    return UserInfoCollections.find();\n  });\n}\n/////////////////////////////////////////////////////////////////////////////////\n\n}}},\"server\":{\"main.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////\n//                                                                             //\n// server/main.js                                                              //\n//                                                                             //\n/////////////////////////////////////////////////////////////////////////////////\n                                                                               //\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 1);\nlet Collections;\nmodule.link(\"../imports/api/server/collections\", {\n  default(v) {\n    Collections = v;\n  }\n\n}, 2);\nlet UserInfoCollections;\nmodule.link(\"../imports/api/userFile\", {\n  UserInfoCollections(v) {\n    UserInfoCollections = v;\n  }\n\n}, 3);\nMeteor.startup(() => {\n  Collections();\n  Meteor.methods({\n    'insertPreference'(pref) {\n      UserInfoCollections.update({\n        \"name\": {\n          \"first\": \"Seung Won\",\n          \"last\": \"Lee\"\n        }\n      }, {\n        $push: {\n          \"preferences\": pref\n        }\n      });\n    }\n\n  });\n});\n/////////////////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".jsx\"\n  ]\n});\n\nvar exports = require(\"/server/main.js\");","hash":"1124ed1239f60bd0901e3356127546067944a7b6","servePath":"/app.js","sourceMap":{"version":3,"sources":["imports/api/server/collections.js","imports/api/category.js","imports/api/userFile.js","server/main.js"],"names":["Meteor","module","link","v","CategoryCollections","UserInfoCollections","exportDefault","Collections","isServer","find","fetch","length","insert","JSON","parse","Assets","getText","export","Mongo","Collection","publish","default","startup","methods","pref","update","$push"],"mappings":"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","file":"/app.js","sourcesContent":["import {Meteor} from 'meteor/meteor';\r\n\r\nimport {CategoryCollections} from '../category';\r\nimport {UserInfoCollections} from '../userFile';\r\n\r\nexport default Collections = () => {\r\n  if (Meteor.isServer) {\r\n    if (CategoryCollections.find().fetch().length == 0) {\r\n\t\t\tCategoryCollections.insert(JSON.parse(Assets.getText(\"category.json\")));\r\n    }\r\n    if (UserInfoCollections.find().fetch().length == 0) {\r\n\t\t\tUserInfoCollections.insert(JSON.parse(Assets.getText(\"user.json\")));\r\n    }\r\n  }\r\n}","import {Mongo} from 'meteor/mongo';\r\nimport {Meteor} from 'meteor/meteor';\r\n\r\nexport const CategoryCollections = new Mongo.Collection('category');\r\n\r\nif (Meteor.isServer) {\r\n    Meteor.publish('category', () => {\r\n        return CategoryCollections.find();\r\n    });\r\n}","import {Mongo} from 'meteor/mongo';\r\nimport {Meteor} from 'meteor/meteor';\r\n\r\nexport const UserInfoCollections = new Mongo.Collection('userInfo');\r\n\r\nif (Meteor.isServer) {\r\n    Meteor.publish('userInfo', () => {\r\n        return UserInfoCollections.find();\r\n    });\r\n}","import { Meteor } from 'meteor/meteor';\nimport {Mongo} from 'meteor/mongo';\n\nimport Collections from '../imports/api/server/collections';import {UserInfoCollections} from '../imports/api/userFile';\n\nMeteor.startup(() => {\n\n  Collections();\n  \n  Meteor.methods({\n    'insertPreference'(pref) {\n      UserInfoCollections.update(\n        {\"name\": {\n          \"first\": \"Seung Won\",\n          \"last\": \"Lee\"\n          }\n        },\n        {$push: {\"preferences\": pref}}\n      )\n    }\n  })\n});\n"]}}]